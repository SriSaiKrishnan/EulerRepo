/**
 * 
 */
package com.practice.euler;

/*
 *
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
 */

/**
 * @author sv
 *
 */
public class HighestDivisibleTriangular {

	public static void findTriangular(int range) {
		int triangular = 0;
		int highestDivisor = 0;
		for (int i = 1; i <=range; i++) {
			triangular += i;
			highestDivisor = findCountOfDivisor(triangular);
			if(highestDivisor >= 500) {
				System.out.println("Highest divisible for the  first " + range + " number is: " + triangular);
				break;
		}
		}
	}

	public static int findCountOfDivisor(int num) {
		int counter = 0;
		int sqrt = (int)Math.sqrt(num);
		for (int i = 1; i < sqrt; i++) {
			if(num%i==0) {
				counter+=2;
			}
		}
		 if (sqrt * sqrt == num) {
			 counter--;
		    }
		return counter;
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		findTriangular(100000);
	}

}
