/**
 * 
 */
package com.practice.euler;

import java.math.BigInteger;

/**
 * @author sv
 *
 */

/*
 * 
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class EvenFibonacciNumbers {
		
	private static long fib;
	private static long oldValue = 1;
	private static long newValue =1;
	private static long evenFibonacciSum =0;
	 
	public static long fibonacci(int range) {
		while(fib<range) {
			fib = oldValue + newValue;
			oldValue=newValue;
			newValue=fib;
			if(fib%2==0) {
				evenFibonacciSum = evenFibonacciSum + fib;
			}
		}
		return evenFibonacciSum;
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(fibonacci(4000000));
	}
}
